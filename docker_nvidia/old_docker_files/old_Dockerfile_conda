ARG UBUNTU_VERSION=20.04
ARG CUDA_VERSION=11.0.3
FROM nvidia/cuda:${CUDA_VERSION}-base-ubuntu${UBUNTU_VERSION}

# Set environment variables for non-interactive installation
# This ensures you will not be prompted for inputs during installation
ENV DEBIAN_FRONTEND=noninteractive


RUN apt --allow-releaseinfo-change update -q && \
    apt-get install -q -y \
    bzip2 \
    ca-certificates \
    git \
    libgl1 \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender1 \
    wget \
    nginx \
    libcurl4-openssl-dev \
    libssl-dev \
    python3-dev \
    gcc \
    && apt-get clean

# Install conda
# Leave these args here to better use the Docker build cache
ARG CONDA_VERSION=py38_4.9.2
ARG CONDA_MD5=122c8c9beb51e124ab32a0fa6426c656

# Add conda to PATH 
ENV PATH /opt/conda/bin:$PATH

RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh -O miniconda.sh && \
    echo "${CONDA_MD5}  miniconda.sh" > miniconda.md5 && \
    if ! md5sum --status -c miniconda.md5; then exit 1; fi && \
    mkdir -p /opt && \
    sh miniconda.sh -b -p /opt/conda && \
    rm miniconda.sh miniconda.md5 && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc && \
    find /opt/conda/ -follow -type f -name '*.a' -delete && \
    find /opt/conda/ -follow -type f -name '*.js.map' -delete && \
    /opt/conda/bin/conda clean -afy

# Load env and req files
COPY . .

# Create a conda env
RUN conda env create -f environment.yml

#SHELL ["conda", "run", "-n", "docker_nvidia", "/bin/bash", "-c"]

CMD ["conda", "run", "-n","docker_nvidia",  "python", "-c", "import torch; torch.cuda.current_device()"] 
